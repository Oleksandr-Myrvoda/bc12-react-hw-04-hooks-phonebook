{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","services/localStorage.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","reset","e","preventDefault","id","uuid","className","styles","form","formLabel","type","pattern","title","required","value","onChange","target","button","ContactList","contacts","deleteContact","map","item","onClick","Filter","STORAGE_KEY","App","setContacts","filter","setFilter","useEffect","savedContacts","key","JSON","parse","localStorage","getItem","error","storage","setItem","stringify","length","newContact","contact","toLowerCase","includes","alert","prevContacts","currentTarget","normalizedFilter","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39448e12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__HfRks\",\"formLabel\":\"ContactForm_formLabel__2_PhS\",\"button\":\"ContactForm_button__3GYUH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3u2fb\",\"button\":\"ContactList_button__3oB82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__4Chpb\"};","import { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = uuid();\r\n    onSubmit({ id, name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label className={styles.formLabel}>\r\n        <p>Name</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.formLabel}>\r\n        <p>Number</p>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={number}\r\n          onChange={(e) => setNumber(e.target.value)}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={styles.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n// class ContactForm extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n//   handleChange = (event) => {\r\n//     const { name, value } = event.currentTarget;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     const id = uuid();\r\n//     this.props.onSubmit({ id, ...this.state });\r\n//     this.reset();\r\n//   };\r\n\r\n//   reset = () => {\r\n//     this.setState({ name: \"\", number: \"\" });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n\r\n//     return (\r\n//       <form onSubmit={this.handleSubmit} className={styles.form}>\r\n//         <label className={styles.formLabel}>\r\n//           <p>Name</p>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n//             required\r\n//             value={name}\r\n//             onChange={this.handleChange}\r\n//           />\r\n//         </label>\r\n\r\n//         <label className={styles.formLabel}>\r\n//           <p>Number</p>\r\n//           <input\r\n//             type=\"tel\"\r\n//             name=\"number\"\r\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n//             required\r\n//             value={number}\r\n//             onChange={this.handleChange}\r\n//           />\r\n//         </label>\r\n\r\n//         <button type=\"submit\" className={styles.button}>\r\n//           Add contact\r\n//         </button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ContactForm;\r\n","import styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ name, number, id }) => (\r\n      <li key={id} className={styles.item}>\r\n        <p>\r\n          {name}: {number}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button}\r\n          onClick={() => deleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n","import styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <p className={styles.title}>Filter</p>\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport * as storage from \"./services/localStorage\";\n\nimport \"./App.css\";\n\nconst STORAGE_KEY = \"contacts\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const addContact = ({ name, number, id }) => {\n    const newContact = {\n      name,\n      number,\n      id,\n    };\n    if (\n      contacts\n        .map((contact) => contact.name.toLowerCase())\n        .includes(newContact.name.toLowerCase())\n    ) {\n      alert(`${newContact.name} is already in contacts`);\n    } else {\n      setContacts((prevContacts) => [newContact, ...prevContacts]);\n    }\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  useEffect(() => {\n    const savedContacts = storage.get(STORAGE_KEY);\n    if (savedContacts) setContacts(savedContacts);\n  }, []);\n\n  useEffect(() => {\n    storage.save(STORAGE_KEY, contacts.length ? contacts : null);\n  }, [contacts]);\n\n  return (\n    <div className=\"mainBox\">\n      <section title=\"Phonebook\" className=\"section\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n      </section>\n\n      <section title=\"Contacts\" className=\"section\">\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={getVisibleContacts()}\n          deleteContact={deleteContact}\n        />\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   componentDidMount() {\n//     const savedContacts = storage.get(STORAGE_KEY);\n//     if (savedContacts) {\n//       this.setState({ contacts: savedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const { contacts } = this.state;\n//     if (prevState.contacts !== contacts) {\n//       storage.save(STORAGE_KEY, contacts);\n//     }\n//   }\n\n//   addContact = ({ name, number, id }) => {\n//     const { contacts } = this.state;\n//     const newContact = {\n//       name,\n//       number,\n//       id,\n//     };\n//     if (\n//       contacts\n//         .map((contact) => contact.name.toLowerCase())\n//         .includes(newContact.name.toLowerCase())\n//     ) {\n//       alert(`${newContact.name} is already in contacts`);\n//     } else {\n//       this.setState((prevState) => ({\n//         contacts: [newContact, ...prevState.contacts],\n//       }));\n//     }\n//   };\n\n//   deleteContact = (contactId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.id !== contactId\n//       ),\n//     }));\n//   };\n\n//   changeFilter = (event) => {\n//     this.setState({ filter: event.currentTarget.value });\n//   };\n\n//   getVisibleContacts = () => {\n//     const { filter, contacts } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter((contacts) =>\n//       contacts.name.toLowerCase().includes(normalizedFilter)\n//     );\n//   };\n\n//   render() {\n//     const { filter } = this.state;\n//     const visibleContacts = this.getVisibleContacts();\n//     return (\n//       <div className=\"mainBox\">\n//         <section title=\"Phonebook\" className=\"section\">\n//           <h1>Phonebook</h1>\n//           <ContactForm onSubmit={this.addContact} />\n//         </section>\n\n//         <section title=\"Contacts\" className=\"section\">\n//           <h2>Contacts</h2>\n//           <Filter value={filter} onChange={this.changeFilter} />\n//           <ContactList\n//             contacts={visibleContacts}\n//             deleteContact={this.deleteContact}\n//           />\n//         </section>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// npm install --save gh-pages\n// npm install --save-dev prop-types\n// npm i uuid\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = (key) => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = (key) => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}